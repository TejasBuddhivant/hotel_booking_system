package com.Logins;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;

@WebServlet("/confirmBooking")
public class confirmBooking extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doPost(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {

        HttpSession session = request.getSession();
        String userEmail = (String) session.getAttribute("user"); // Ensure user is logged in

        if (userEmail == null) {
            response.sendRedirect("login.jsp"); // Redirect if user is not logged in
            return;
        }

        String roomNo = request.getParameter("roomNo");
        String checkInDateStr = request.getParameter("checkInDate");
        String checkOutDateStr = request.getParameter("checkOutDate");
        String roomPriceStr = request.getParameter("roomPrice");

        if (roomNo == null || checkInDateStr == null || checkOutDateStr == null || roomPriceStr == null) {
            response.sendRedirect("error.jsp?msg=Missing parameters");
            return;
        }

        double roomPrice = Double.parseDouble(roomPriceStr);
        long totalCost = 0;

        try {
            // Convert dates to calculate stay duration (correct format)
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date checkInDate = sdf.parse(checkInDateStr);
            Date checkOutDate = sdf.parse(checkOutDateStr);
            session.setAttribute("checkInDate", checkInDate);
            session.setAttribute("checkOutDate", checkOutDate);

            long diffInMillies = checkOutDate.getTime() - checkInDate.getTime();
            long daysStayed = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS); // Correct conversion

            if (daysStayed < 1) {
                response.sendRedirect("error.jsp?msg=Invalid date selection");
                return;
            }

            totalCost = (long) (daysStayed * roomPrice); // Calculate total cost properly
            session.setAttribute("totalCost", totalCost); // Store total cost in session
        } catch (Exception e) {
            e.printStackTrace();
            response.sendRedirect("error.jsp?msg=Invalid date format");
            return;
        }

        Connection con = null;
        PreparedStatement ps = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel_booking", "root", "Tejas@412301");

            // Check if the email exists in users table
            String userCheckQuery = "SELECT email FROM users WHERE email = ?";
            PreparedStatement userCheckStmt = con.prepareStatement(userCheckQuery);
            userCheckStmt.setString(1, userEmail);
            if (!userCheckStmt.executeQuery().next()) {
                response.sendRedirect("error.jsp?msg=Invalid User");
                return;
            }

            // Update the rooms table with booked_by user
            String updateQuery = "UPDATE rooms SET booked_by = ?, check_in_date = ?, check_out_date = ? WHERE room_no = ?";
            ps = con.prepareStatement(updateQuery);
            ps.setString(1, userEmail);
            ps.setString(2, checkInDateStr);
            ps.setString(3, checkOutDateStr);
            ps.setString(4, roomNo);

            int updatedRows = ps.executeUpdate();
            if (updatedRows > 0) {
                response.sendRedirect("roombooking/invoice.jsp"); // Redirect to invoice page
            } else {
                response.sendRedirect("error.jsp?msg=Room not found or already booked");
            }

        } catch (Exception e) {
            e.printStackTrace();
            response.sendRedirect("error.jsp?msg=Database Error " + e);
        } finally {
            try { if (ps != null) ps.close(); } catch (Exception e) {}
            try { if (con != null) con.close(); } catch (Exception e) {}
        }
    }
}
