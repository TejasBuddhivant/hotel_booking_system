/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-03-10 17:09:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.roombooking;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import javax.servlet.http.HttpSession;

public final class bookroom_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("javax.servlet.http.HttpSession");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    HttpSession sessionUser = request.getSession(true);
    String roomType = request.getParameter("roomType");

    if (roomType != null) {
        sessionUser.setAttribute("roomType", roomType);
    } else {
        roomType = (String) sessionUser.getAttribute("roomType");
    }

    String roomNo = "";
    String roomPrice = "";

    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;

    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel_booking", "root", "Tejas@412301");

        // Get an available room
        String query = "SELECT room_no, room_rate FROM rooms WHERE room_name = ? AND booked_by IS NULL LIMIT 1";
        ps = con.prepareStatement(query);
        ps.setString(1, roomType);
        rs = ps.executeQuery();

        if (rs.next()) {
            roomNo = rs.getString("room_no");
            roomPrice = rs.getString("room_rate");
            sessionUser.setAttribute("roomNo", roomNo);
            sessionUser.setAttribute("roomPrice", roomPrice);
        }
    } catch (Exception e) {
        e.printStackTrace();
    } finally {
        try { if (rs != null) rs.close(); } catch (Exception e) {}
        try { if (ps != null) ps.close(); } catch (Exception e) {}
        try { if (con != null) con.close(); } catch (Exception e) {}
    }
    
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Book Room</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"StyleSheets/bookroom.css\">\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            height: 100vh;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .container {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            background: white;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            max-width: 800px;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .image-container img {\r\n");
      out.write("            max-width: 300px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .details-container {\r\n");
      out.write("            flex: 1;\r\n");
      out.write("            padding-left: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h2 {\r\n");
      out.write("            font-size: 28px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        p {\r\n");
      out.write("            font-size: 20px;\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input[type=\"date\"] {\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            padding: 8px;\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button {\r\n");
      out.write("            padding: 10px 15px;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            background-color: #28a745;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button:hover {\r\n");
      out.write("            background-color: #218838;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .total-cost {\r\n");
      out.write("            font-size: 22px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: #d9534f;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"image-container\">\r\n");
      out.write("            <img src=\"https://cdn.pixabay.com/photo/2016/11/19/00/32/boy-1837466_1280.png\" alt=\"Deluxe Room\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"details-container\">\r\n");
      out.write("            <h2>Room Booking Details</h2>\r\n");
      out.write("            <p><strong>Room Type:</strong> ");
      out.print( roomType );
      out.write("</p>\r\n");
      out.write("            <p><strong>Room No:</strong> ");
      out.print( roomNo );
      out.write("</p>\r\n");
      out.write("            <p><strong>Price Per Night:</strong> $");
      out.print( roomPrice );
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("            <form action=\"http://localhost:8080/hotel_mgt_new/confirmBooking\" method=\"post\">\r\n");
      out.write("                <input type=\"hidden\" name=\"roomNo\" value=\"");
      out.print( roomNo );
      out.write("\">\r\n");
      out.write("                <input type=\"hidden\" name=\"roomType\" value=\"");
      out.print( roomType );
      out.write("\">\r\n");
      out.write("                <input type=\"hidden\" name=\"roomPrice\" value=\"");
      out.print( roomPrice );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("                <label for=\"checkInDate\"><strong>Check-in Date:</strong></label>\r\n");
      out.write("                <input type=\"date\" id=\"checkInDate\" name=\"checkInDate\" required onchange=\"calculateTotalCost()\">\r\n");
      out.write("\r\n");
      out.write("                <label for=\"checkOutDate\"><strong>Check-out Date:</strong></label>\r\n");
      out.write("                <input type=\"date\" id=\"checkOutDate\" name=\"checkOutDate\" required onchange=\"calculateTotalCost()\">\r\n");
      out.write("\r\n");
      out.write("                <p class=\"total-cost\">Total Cost: $<span id=\"totalCost\">0</span></p>\r\n");
      out.write("\r\n");
      out.write("                <button type=\"submit\">Confirm Booking</button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div> \r\n");
      out.write("    <script>\r\n");
      out.write("        function calculateTotalCost() {\r\n");
      out.write("            const checkInDate = new Date(document.getElementById(\"checkInDate\").value);\r\n");
      out.write("            const checkOutDate = new Date(document.getElementById(\"checkOutDate\").value);\r\n");
      out.write("            const roomPrice = parseFloat(\"");
      out.print( roomPrice );
      out.write("\");\r\n");
      out.write("\r\n");
      out.write("            if (!isNaN(checkInDate.getTime()) && !isNaN(checkOutDate.getTime()) && checkOutDate > checkInDate) {\r\n");
      out.write("                const timeDiff = checkOutDate.getTime() - checkInDate.getTime();\r\n");
      out.write("                const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n");
      out.write("                const totalCost = daysDiff * roomPrice;\r\n");
      out.write("                document.getElementById(\"totalCost\").innerText = totalCost.toFixed(2);\r\n");
      out.write("            } else {\r\n");
      out.write("                document.getElementById(\"totalCost\").innerText = \"0\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
